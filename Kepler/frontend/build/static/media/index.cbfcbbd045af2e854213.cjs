"use strict";var __defProp=Object.defineProperty,__getOwnPropDesc=Object.getOwnPropertyDescriptor,__getOwnPropNames=Object.getOwnPropertyNames,__hasOwnProp=Object.prototype.hasOwnProperty,__export=(e,t)=>{for(var n in t)__defProp(e,n,{get:t[n],enumerable:!0})},__copyProps=(e,t,n,r)=>{if(t&&"object"===typeof t||"function"===typeof t)for(let o of __getOwnPropNames(t))__hasOwnProp.call(e,o)||o===n||__defProp(e,o,{get:()=>t[o],enumerable:!(r=__getOwnPropDesc(t,o))||r.enumerable});return e},__toCommonJS=e=>__copyProps(__defProp({},"__esModule",{value:!0}),e),src_exports={};__export(src_exports,{HexWKBLoader:()=>HexWKBLoader,TWKBLoader:()=>TWKBLoader,TWKBWriter:()=>TWKBWriter,WKBLoader:()=>WKBLoader,WKBWorkerLoader:()=>WKBWorkerLoader,WKBWriter:()=>WKBWriter,WKTCRSLoader:()=>WKTCRSLoader,WKTCRSWriter:()=>WKTCRSWriter,WKTLoader:()=>WKTLoader,WKTWorkerLoader:()=>WKTWorkerLoader,WKTWriter:()=>WKTWriter,decodeHex:()=>decodeHex,encodeHex:()=>encodeHex,isTWKB:()=>isTWKB,isWKB:()=>isWKB,isWKT:()=>isWKT,parseWKBHeader:()=>parseWKBHeader}),module.exports=__toCommonJS(src_exports);var VERSION="undefined"!==typeof __VERSION__?__VERSION__:"latest";function parseWKTCRS(e,t){let n;(null==t?void 0:t.debug)&&console.log("[wktcrs] parse starting with\n",e),e=(e=e.replace(/[A-Z][A-Z\d_]+\[/gi,(e=>`["${e.substr(0,e.length-1)}",`))).replace(/, ?([A-Z][A-Z\d_]+[,\]])/gi,((e,n)=>{const r=n.substr(0,n.length-1);return`,"${(null==t?void 0:t.raw)?"raw:":""}${r}"${n[n.length-1]}`})),(null==t?void 0:t.raw)&&(e=e.replace(/, {0,2}(-?[\.\d]+)(?=,|\])/g,(function(e,n){return`,"${(null==t?void 0:t.raw)?"raw:":""}${n}"`}))),(null==t?void 0:t.debug)&&console.log(`[wktcrs] json'd wkt: '${e}'`);try{n=JSON.parse(e)}catch(o){throw console.error(`[wktcrs] failed to parse '${e}'`),o}(null==t?void 0:t.debug)&&console.log(`[wktcrs] json parsed: '${e}'`);const r=function e(t,n){const r=t[0];t.forEach((function(n){Array.isArray(n)&&e(n,t)}));const o=`MULTIPLE_${r}`;return o in n?n[o].push(t):r in n?(n[o]=[n[r],t],delete n[r]):n[r]=t,n}(n,[n]);return(null==t?void 0:t.debug)&&console.log("[wktcrs] parse returning",r),(null==t?void 0:t.sort)&&sort(r,t),r}function sort(e,t){const n=Object.keys(e).filter((e=>!/\d+/.test(e))),r=(null==t?void 0:t.keywords)||[];if(!(null==t?void 0:t.keywords)){const t={};if(Array.isArray(e)){e.forEach((e=>{if(Array.isArray(e)&&e.length>=2&&"string"===typeof e[1]){const n=e[0];t[n]||(t[n]=0),t[n]++}}));for(const e in t)t[e]>0&&r.push(e)}}return n.forEach((t=>{e[t]=sort(e[t])})),r.forEach((t=>{const n=[],r=[];e.forEach(((e,o)=>{Array.isArray(e)&&e[0]===t&&(n.push(o),r.push(e))})),r.sort(((e,t)=>(e=e[1].toString())<(t=t[1].toString())?-1:e>t?1:0)),r.forEach(((t,r)=>{e[n[r]]=t}))})),e}var WKTCRSLoader={name:"WKT CRS (Well-Known Text Coordinate Reference System)",id:"wkt-crs",module:"wkt-crs",version:VERSION,worker:!0,extensions:[],mimeTypes:["text/plain"],category:"json",text:!0,options:{"wkt-crs":{}},parse:async(e,t)=>parseWKTCRS((new TextDecoder).decode(e),null==t?void 0:t["wkt-crs"]),parseTextSync:(e,t)=>parseWKTCRS(e,null==t?void 0:t["wkt-crs"])};function encodeWKTCRS(e,t){Array.isArray(e)&&1===e.length&&Array.isArray(e[0])&&(e=e[0]);const[n,...r]=e;return`${n}[${r.map((e=>{if(Array.isArray(e))return encodeWKTCRS(e,t);if("number"===typeof e)return e.toString();if("string"===typeof e)return e.startsWith("raw:")?e.replace("raw:",""):`"${e}"`;throw new Error(`[wktcrs] unexpected attribute "${e}"`)})).join(",")}]`}var WKTCRSWriter={name:"WKT CRS (Well-Known Text Coordinate Reference System)",id:"wkt-crs",module:"wkt-crs",version:VERSION,worker:!0,extensions:[],mimeTypes:["text/plain"],text:!0,options:{"wkt-crs":{}},encode:async(e,t)=>(new TextEncoder).encode(encodeWKTCRS(e,null==t?void 0:t["wkt-crs"])),encodeSync:(e,t)=>(new TextEncoder).encode(encodeWKTCRS(e,null==t?void 0:t["wkt-crs"])),encodeTextSync:(e,t)=>encodeWKTCRS(e,null==t?void 0:t["wkt-crs"])},numberRegexp=/[-+]?([0-9]*\.[0-9]+|[0-9]+)([eE][-+]?[0-9]+)?/,tuples=new RegExp("^"+numberRegexp.source+"(\\s"+numberRegexp.source+"){1,}"),WKT_MAGIC_STRINGS=["POINT(","LINESTRING(","POLYGON(","MULTIPOINT(","MULTILINESTRING(","MULTIPOLYGON(","GEOMETRYCOLLECTION("];function isWKT(e){return WKT_MAGIC_STRINGS.some((t=>e.startsWith(t)))}function parseWKT(e,t){return parseWKTToGeometry(e,t)}function parseWKTToGeometry(e,t){var n;const r=e.split(";");let o=r.pop();const i=(r.shift()||"").split("=").pop(),s=parseGeometry({parts:r,_:o,i:0});return(null==(n=null==t?void 0:t.wkt)?void 0:n.crs)?addCRS(s,i):s}function parseGeometry(e){return parsePoint(e)||parseLineString(e)||parsePolygon(e)||parseMultiPoint(e)||parseMultiLineString(e)||parseMultiPolygon(e)||parseGeometryCollection(e)}function addCRS(e,t){if(e&&(null==t?void 0:t.match(/\d+/))){const n={type:"name",properties:{name:"urn:ogc:def:crs:EPSG::"+t}};e.crs=n}return e}function parsePoint(e){if(!$(/^(POINT(\sz)?)/i,e))return null;if(white(e),!$(/^(\()/,e))return null;const t=coords(e);return t?(white(e),$(/^(\))/,e)?{type:"Point",coordinates:t[0]}:null):null}function parseMultiPoint(e){var t,n;if(!$(/^(MULTIPOINT)/i,e))return null;white(e);const r=null==(n=e._)?void 0:n.substring((null==(t=e._)?void 0:t.indexOf("("))+1,e._.length-1).replace(/\(/g,"").replace(/\)/g,"");e._="MULTIPOINT ("+r+")";const o=multicoords(e);return o?(white(e),{type:"MultiPoint",coordinates:o}):null}function parseLineString(e){if(!$(/^(LINESTRING(\sz)?)/i,e))return null;if(white(e),!$(/^(\()/,e))return null;const t=coords(e);return t&&$(/^(\))/,e)?{type:"LineString",coordinates:t}:null}function parseMultiLineString(e){if(!$(/^(MULTILINESTRING)/i,e))return null;white(e);const t=multicoords(e);return t?(white(e),{type:"MultiLineString",coordinates:t}):null}function parsePolygon(e){if(!$(/^(POLYGON(\sz)?)/i,e))return null;white(e);const t=multicoords(e);return t?{type:"Polygon",coordinates:t}:null}function parseMultiPolygon(e){if(!$(/^(MULTIPOLYGON)/i,e))return null;white(e);const t=multicoords(e);return t?{type:"MultiPolygon",coordinates:t}:null}function parseGeometryCollection(e){const t=[];let n;if(!$(/^(GEOMETRYCOLLECTION)/i,e))return null;if(white(e),!$(/^(\()/,e))return null;for(;n=parseGeometry(e);)t.push(n),white(e),$(/^(,)/,e),white(e);return $(/^(\))/,e)?{type:"GeometryCollection",geometries:t}:null}function multicoords(e){white(e);let t=0;const n=[],r=[n];let o,i=n;for(;o=$(/^(\()/,e)||$(/^(\))/,e)||$(/^(,)/,e)||$(tuples,e);){if("("===o)r.push(i),i=[],r[r.length-1].push(i),t++;else if(")"===o){if(0===i.length)return null;if(i=r.pop(),!i)return null;if(t--,0===t)break}else if(","===o)i=[],r[r.length-1].push(i);else{if(o.split(/\s/g).some(isNaN))return null;Array.prototype.push.apply(i,o.split(/\s/g).map(parseFloat))}white(e)}return 0!==t?null:n}function coords(e){const t=[];let n,r;for(;r=$(tuples,e)||$(/^(,)/,e);)","===r?(t.push(n),n=[]):r.split(/\s/g).some(isNaN)||(n||(n=[]),Array.prototype.push.apply(n,r.split(/\s/g).map(parseFloat))),white(e);return n?(t.push(n),t.length?t:null):null}function $(e,t){var n;const r=null==(n=t._)?void 0:n.substring(t.i).match(e);return r?(t.i+=r[0].length,r[0]):null}function white(e){$(/^\s*/,e)}var WKTWorkerLoader={name:"WKT (Well-Known Text)",id:"wkt",module:"wkt",version:VERSION,worker:!0,extensions:["wkt"],mimeTypes:["text/plain"],category:"geometry",text:!0,tests:WKT_MAGIC_STRINGS,testText:isWKT,options:{wkt:{shape:"geojson-geometry",crs:!0}}},WKTLoader={...WKTWorkerLoader,parse:async(e,t)=>parseWKT((new TextDecoder).decode(e),t),parseTextSync:parseWKT};function encodeWKT(e){switch("Feature"===e.type&&(e=e.geometry),e.type){case"Point":return`POINT ${wrapParens(pairWKT(e.coordinates))}`;case"LineString":return`LINESTRING ${wrapParens(ringWKT(e.coordinates))}`;case"Polygon":return`POLYGON ${wrapParens(ringsWKT(e.coordinates))}`;case"MultiPoint":return`MULTIPOINT ${wrapParens(ringWKT(e.coordinates))}`;case"MultiPolygon":return`MULTIPOLYGON ${wrapParens(multiRingsWKT(e.coordinates))}`;case"MultiLineString":return`MULTILINESTRING ${wrapParens(ringsWKT(e.coordinates))}`;case"GeometryCollection":return`GEOMETRYCOLLECTION ${wrapParens(e.geometries.map(encodeWKT).join(", "))}`;default:throw new Error("stringify requires a valid GeoJSON Feature or geometry object as input")}}function pairWKT(e){return e.join(" ")}function ringWKT(e){return e.map(pairWKT).join(", ")}function ringsWKT(e){return e.map(ringWKT).map(wrapParens).join(", ")}function multiRingsWKT(e){return e.map(ringsWKT).map(wrapParens).join(", ")}function wrapParens(e){return`(${e})`}var WKTWriter={name:"WKT (Well Known Text)",id:"wkt",module:"wkt",version:VERSION,extensions:["wkt"],text:!0,encode:async e=>encodeWKTSync(e),encodeSync:encodeWKTSync,encodeTextSync:encodeWKT,options:{wkt:{}}};function encodeWKTSync(e){return(new TextEncoder).encode(encodeWKT(e)).buffer}var import_gis=require("@loaders.gl/gis"),EWKB_FLAG_Z=2147483648,EWKB_FLAG_M=1073741824,EWKB_FLAG_SRID=536870912,MAX_SRID=1e4;function isWKB(e){const t=new DataView(e);let n=0;const r=t.getUint8(n);if(n+=1,r>1)return!1;const o=1===r,i=t.getUint32(n,o);n+=4;const s=7&i;if(0===s||s>7)return!1;const a=i-s;if(0===a||1e3===a||2e3===a||3e3===a)return!0;if(0!==(a&~(EWKB_FLAG_Z|EWKB_FLAG_M|EWKB_FLAG_SRID)))return!1;if(a&EWKB_FLAG_SRID){const e=t.getUint32(n,o);if(n+=4,e>MAX_SRID)return!1}return!0}function parseWKBHeader(e,t){const n=Object.assign(t||{},{type:"wkb",geometryType:1,dimensions:2,coordinates:"xy",littleEndian:!0,byteOffset:0});n.littleEndian=1===e.getUint8(n.byteOffset),n.byteOffset++;const r=e.getUint32(n.byteOffset,n.littleEndian);n.byteOffset+=4,n.geometryType=7&r;const o=(r-n.geometryType)/1e3;switch(o){case 0:break;case 1:n.type="iso-wkb",n.dimensions=3,n.coordinates="xyz";break;case 2:n.type="iso-wkb",n.dimensions=3,n.coordinates="xym";break;case 3:n.type="iso-wkb",n.dimensions=4,n.coordinates="xyzm";break;default:throw new Error(`WKB: Unsupported iso-wkb type: ${o}`)}const i=r&EWKB_FLAG_Z,s=r&EWKB_FLAG_M,a=r&EWKB_FLAG_SRID;return i&&s?(n.type="ewkb",n.dimensions=4,n.coordinates="xyzm"):i?(n.type="ewkb",n.dimensions=3,n.coordinates="xyz"):s&&(n.type="ewkb",n.dimensions=3,n.coordinates="xym"),a&&(n.type="ewkb",n.srid=e.getUint32(n.byteOffset,n.littleEndian),n.byteOffset+=4),n}function parseWKB(e,t){var n;const r=parseWKBToBinary(e,t),o=(null==(n=null==t?void 0:t.wkb)?void 0:n.shape)||"binary-geometry";switch(o){case"binary-geometry":return r;case"geojson-geometry":return(0,import_gis.binaryToGeometry)(r);case"geometry":return console.error('WKBLoader: "geometry" shape is deprecated, use "binary-geometry" instead'),(0,import_gis.binaryToGeometry)(r);default:throw new Error(o)}}function parseWKBToBinary(e,t){const n=new DataView(e),r=parseWKBHeader(n),{geometryType:o,dimensions:i,littleEndian:s}=r,a=r.byteOffset;switch(o){case 1:return parsePoint2(n,a,i,s).geometry;case 2:return parseLineString2(n,a,i,s).geometry;case 3:return parsePolygon2(n,a,i,s).geometry;case 4:const e=parseMultiPoint2(n,a,i,s);return e.type="Point",e;case 5:const t=parseMultiLineString2(n,a,i,s);return t.type="LineString",t;case 6:const r=parseMultiPolygon2(n,a,i,s);return r.type="Polygon",r;default:throw new Error(`WKB: Unsupported geometry type: ${o}`)}}function parsePoint2(e,t,n,r){const o=new Float64Array(n);for(let i=0;i<n;i++)o[i]=e.getFloat64(t,r),t+=8;return{geometry:{type:"Point",positions:{value:o,size:n}},offset:t}}function parseLineString2(e,t,n,r){const o=e.getUint32(t,r);t+=4;const i=new Float64Array(o*n);for(let a=0;a<o*n;a++)i[a]=e.getFloat64(t,r),t+=8;const s=[0];return o>0&&s.push(o),{geometry:{type:"LineString",positions:{value:i,size:n},pathIndices:{value:new Uint16Array(s),size:1}},offset:t}}var cumulativeSum=e=>t=>e+=t;function parsePolygon2(e,t,n,r){const o=e.getUint32(t,r);t+=4;const i=[];for(let u=0;u<o;u++){const o=parseLineString2(e,t,n,r),{positions:s}=o.geometry;t=o.offset,i.push(s.value)}const s=new Float64Array(concatTypedArrays(i).buffer),a=[0];s.length>0&&a.push(s.length/n);const c=i.map((e=>e.length/n)).map(cumulativeSum(0));return c.unshift(0),{geometry:{type:"Polygon",positions:{value:s,size:n},polygonIndices:{value:new Uint16Array(a),size:1},primitivePolygonIndices:{value:new Uint16Array(c),size:1}},offset:t}}function parseMultiPoint2(e,t,n,r){const o=e.getUint32(t,r);t+=4;const i=[];for(let s=0;s<o;s++){const r=1===e.getUint8(t);if(t++,e.getUint32(t,r)%1e3!==1)throw new Error("WKB: Inner geometries of MultiPoint not of type Point");const o=parsePoint2(e,t+=4,n,r);t=o.offset,i.push(o.geometry)}return concatenateBinaryPointGeometries(i,n)}function parseMultiLineString2(e,t,n,r){const o=e.getUint32(t,r);t+=4;const i=[];for(let s=0;s<o;s++){const r=1===e.getUint8(t);if(t++,e.getUint32(t,r)%1e3!==2)throw new Error("WKB: Inner geometries of MultiLineString not of type LineString");const o=parseLineString2(e,t+=4,n,r);t=o.offset,i.push(o.geometry)}return concatenateBinaryLineGeometries(i,n)}function parseMultiPolygon2(e,t,n,r){const o=e.getUint32(t,r);t+=4;const i=[];for(let s=0;s<o;s++){const r=1===e.getUint8(t);if(t++,e.getUint32(t,r)%1e3!==3)throw new Error("WKB: Inner geometries of MultiPolygon not of type Polygon");const o=parsePolygon2(e,t+=4,n,r);t=o.offset,i.push(o.geometry)}return concatenateBinaryPolygonGeometries(i,n)}function concatenateBinaryPointGeometries(e,t){const n=e.map((e=>e.positions.value));return{type:"Point",positions:{value:new Float64Array(concatTypedArrays(n).buffer),size:t}}}function concatenateBinaryLineGeometries(e,t){const n=e.map((e=>e.positions.value)),r=new Float64Array(concatTypedArrays(n).buffer),o=n.map((e=>e.length/t)).map(cumulativeSum(0));return o.unshift(0),{type:"LineString",positions:{value:r,size:t},pathIndices:{value:new Uint16Array(o),size:1}}}function concatenateBinaryPolygonGeometries(e,t){const n=[],r=[];for(const a of e){const{positions:e,primitivePolygonIndices:t}=a;n.push(e.value),r.push(t.value)}const o=new Float64Array(concatTypedArrays(n).buffer),i=n.map((e=>e.length/t)).map(cumulativeSum(0));i.unshift(0);const s=[0];for(const a of r)s.push(...a.filter((e=>e>0)).map((e=>e+s[s.length-1])));return{type:"Polygon",positions:{value:o,size:t},polygonIndices:{value:new Uint16Array(i),size:1},primitivePolygonIndices:{value:new Uint16Array(s),size:1}}}function concatTypedArrays(e){let t=0;for(let o=0;o<e.length;++o)t+=e[o].byteLength;const n=new Uint8Array(t);let r=0;for(let o=0;o<e.length;++o){const i=new Uint8Array(e[o].buffer);t=i.length;for(let e=0;e<t;++e)n[r++]=i[e]}return n}var WKBWorkerLoader={name:"WKB",id:"wkb",module:"wkt",version:VERSION,worker:!0,category:"geometry",extensions:["wkb"],mimeTypes:[],tests:[isWKB],options:{wkb:{shape:"binary-geometry"}}},WKBLoader={...WKBWorkerLoader,parse:async e=>parseWKB(e),parseSync:parseWKB},LE=!0,BE=!1,BinaryWriter=class{constructor(e,t){this.byteOffset=0,this.allowResize=!1,this.arrayBuffer=new ArrayBuffer(e),this.dataView=new DataView(this.arrayBuffer),this.byteOffset=0,this.allowResize=t||!1}writeUInt8(e){this._ensureSize(1),this.dataView.setUint8(this.byteOffset,e),this.byteOffset+=1}writeUInt16LE(e){this._ensureSize(2),this.dataView.setUint16(this.byteOffset,e,LE),this.byteOffset+=2}writeUInt16BE(e){this._ensureSize(2),this.dataView.setUint16(this.byteOffset,e,BE),this.byteOffset+=2}writeUInt32LE(e){this._ensureSize(4),this.dataView.setUint32(this.byteOffset,e,LE),this.byteOffset+=4}writeUInt32BE(e){this._ensureSize(4),this.dataView.setUint32(this.byteOffset,e,BE),this.byteOffset+=4}writeInt8(e){this._ensureSize(1),this.dataView.setInt8(this.byteOffset,e),this.byteOffset+=1}writeInt16LE(e){this._ensureSize(2),this.dataView.setInt16(this.byteOffset,e,LE),this.byteOffset+=2}writeInt16BE(e){this._ensureSize(2),this.dataView.setInt16(this.byteOffset,e,BE),this.byteOffset+=2}writeInt32LE(e){this._ensureSize(4),this.dataView.setInt32(this.byteOffset,e,LE),this.byteOffset+=4}writeInt32BE(e){this._ensureSize(4),this.dataView.setInt32(this.byteOffset,e,BE),this.byteOffset+=4}writeFloatLE(e){this._ensureSize(4),this.dataView.setFloat32(this.byteOffset,e,LE),this.byteOffset+=4}writeFloatBE(e){this._ensureSize(4),this.dataView.setFloat32(this.byteOffset,e,BE),this.byteOffset+=4}writeDoubleLE(e){this._ensureSize(8),this.dataView.setFloat64(this.byteOffset,e,LE),this.byteOffset+=8}writeDoubleBE(e){this._ensureSize(8),this.dataView.setFloat64(this.byteOffset,e,BE),this.byteOffset+=8}writeVarInt(e){let t=1;for(;0!==(4294967168&e);)this.writeUInt8(127&e|128),e>>>=7,t++;return this.writeUInt8(127&e),t}writeBuffer(e){this._ensureSize(e.byteLength);new Uint8Array(this.arrayBuffer).set(new Uint8Array(e),this.byteOffset),this.byteOffset+=e.byteLength}_ensureSize(e){if(this.arrayBuffer.byteLength<this.byteOffset+e){if(!this.allowResize)throw new Error("BinaryWriter overflow");{const t=new ArrayBuffer(this.byteOffset+e);new Uint8Array(t).set(new Uint8Array(this.arrayBuffer)),this.arrayBuffer=t}}}};function encodeWKB(e,t={}){switch("Feature"===e.type&&(e=e.geometry),e.type){case"Point":return encodePoint(e.coordinates,t);case"LineString":return encodeLineString(e.coordinates,t);case"Polygon":return encodePolygon(e.coordinates,t);case"MultiPoint":return encodeMultiPoint(e,t);case"MultiPolygon":return encodeMultiPolygon(e,t);case"MultiLineString":return encodeMultiLineString(e,t);case"GeometryCollection":return encodeGeometryCollection(e,t);default:throw new Error(`Unhandled case: ${e}`)}}function getGeometrySize(e,t){switch(e.type){case"Point":return getPointSize(t);case"LineString":return getLineStringSize(e.coordinates,t);case"Polygon":return getPolygonSize(e.coordinates,t);case"MultiPoint":return getMultiPointSize(e,t);case"MultiPolygon":return getMultiPolygonSize(e,t);case"MultiLineString":return getMultiLineStringSize(e,t);case"GeometryCollection":return getGeometryCollectionSize(e,t);default:throw new Error(`Unhandled case: ${e}`)}}function encodePoint(e,t){const n=new BinaryWriter(getPointSize(t));return n.writeInt8(1),writeWkbType(n,1,t),"undefined"===typeof e[0]&&"undefined"===typeof e[1]?(n.writeDoubleLE(NaN),n.writeDoubleLE(NaN),t.hasZ&&n.writeDoubleLE(NaN),t.hasM&&n.writeDoubleLE(NaN)):writeCoordinate(n,e,t),n.arrayBuffer}function writeCoordinate(e,t,n){e.writeDoubleLE(t[0]),e.writeDoubleLE(t[1]),n.hasZ&&e.writeDoubleLE(t[2]),n.hasM&&e.writeDoubleLE(t[3])}function getPointSize(e){return 5+getCoordinateSize(e)}function encodeLineString(e,t){const n=getLineStringSize(e,t),r=new BinaryWriter(n);r.writeInt8(1),writeWkbType(r,2,t),r.writeUInt32LE(e.length);for(const o of e)writeCoordinate(r,o,t);return r.arrayBuffer}function getLineStringSize(e,t){const n=getCoordinateSize(t);return 9+e.length*n}function encodePolygon(e,t){const n=new BinaryWriter(getPolygonSize(e,t));n.writeInt8(1),writeWkbType(n,3,t);const[r,...o]=e;r.length>0?(n.writeUInt32LE(1+o.length),n.writeUInt32LE(r.length)):n.writeUInt32LE(0);for(const i of r)writeCoordinate(n,i,t);for(const i of o){n.writeUInt32LE(i.length);for(const e of i)writeCoordinate(n,e,t)}return n.arrayBuffer}function getPolygonSize(e,t){const n=getCoordinateSize(t),[r,...o]=e;let i=9;r.length>0&&(i+=4+r.length*n);for(const s of o)i+=4+s.length*n;return i}function encodeMultiPoint(e,t){const n=new BinaryWriter(getMultiPointSize(e,t)),r=e.coordinates;n.writeInt8(1),writeWkbType(n,4,t),n.writeUInt32LE(r.length);for(const o of r){const e=encodePoint(o,t);n.writeBuffer(e)}return n.arrayBuffer}function getMultiPointSize(e,t){let n=getCoordinateSize(t);return n+=5,9+e.coordinates.length*n}function encodeMultiLineString(e,t){const n=new BinaryWriter(getMultiLineStringSize(e,t)),r=e.coordinates;n.writeInt8(1),writeWkbType(n,5,t),n.writeUInt32LE(r.length);for(const o of r){const e=encodeLineString(o,t);n.writeBuffer(e)}return n.arrayBuffer}function getMultiLineStringSize(e,t){let n=9;const r=e.coordinates;for(const o of r)n+=getLineStringSize(o,t);return n}function encodeMultiPolygon(e,t){const n=new BinaryWriter(getMultiPolygonSize(e,t)),r=e.coordinates;n.writeInt8(1),writeWkbType(n,6,t),n.writeUInt32LE(r.length);for(const o of r){const e=encodePolygon(o,t);n.writeBuffer(e)}return n.arrayBuffer}function getMultiPolygonSize(e,t){let n=9;const r=e.coordinates;for(const o of r)n+=getPolygonSize(o,t);return n}function encodeGeometryCollection(e,t){const n=new BinaryWriter(getGeometryCollectionSize(e,t));n.writeInt8(1),writeWkbType(n,7,t),n.writeUInt32LE(e.geometries.length);for(const r of e.geometries){const e=encodeWKB(r,t);n.writeBuffer(e)}return n.arrayBuffer}function getGeometryCollectionSize(e,t){let n=9;for(const r of e.geometries)n+=getGeometrySize(r,t);return n}function writeWkbType(e,t,n){const{hasZ:r,hasM:o,srid:i}=n;let s=0;i?(r&&(s|=2147483648),o&&(s|=1073741824)):r&&o?s+=3e3:r?s+=1e3:o&&(s+=2e3),e.writeUInt32LE(s+t>>>0)}function getCoordinateSize(e){let t=16;return e.hasZ&&(t+=8),e.hasM&&(t+=8),t}var WKBWriter={name:"WKB (Well Known Binary)",id:"wkb",module:"wkt",version:VERSION,extensions:["wkb"],options:{wkb:{hasZ:!1,hasM:!1}},encode:async(e,t)=>encodeWKB(e,null==t?void 0:t.wkb),encodeSync:(e,t)=>encodeWKB(e,null==t?void 0:t.wkb)},alphabet="0123456789abcdef",encodeLookup=[],decodeLookup=[];for(let e=0;e<256;e++)encodeLookup[e]=alphabet[e>>4&15]+alphabet[15&e],e<16&&(e<10?decodeLookup[48+e]=e:decodeLookup[87+e]=e);function encodeHex(e){const t=e.length;let n="",r=0;for(;r<t;)n+=encodeLookup[e[r++]];return n}function decodeHex(e){const t=e.length>>1,n=t<<1,r=new Uint8Array(t);let o=0,i=0;for(;i<n;)r[o++]=decodeLookup[e.charCodeAt(i++)]<<4|decodeLookup[e.charCodeAt(i++)];return r}var HexWKBLoader={name:"Hexadecimal WKB",id:"wkb",module:"wkt",version:VERSION,worker:!0,category:"geometry",extensions:["wkb"],mimeTypes:[],options:WKBLoader.options,text:!0,testText:isHexWKB,parse:async e=>parseHexWKB((new TextDecoder).decode(e)),parseTextSync:parseHexWKB};function parseHexWKB(e,t){var n,r;const o=decodeHex(e);return null==(r=(n=WKBLoader).parseSync)?void 0:r.call(n,o.buffer,t)}function isHexWKB(e){return!!e&&(!(e.length<10||e.length%2!==0)&&(!(!e.startsWith("00")&&!e.startsWith("01"))&&/^[0-9a-fA-F]+$/.test(e.slice(2))))}var BinaryReader=class{constructor(e,t=!1){this.arrayBuffer=e,this.dataView=new DataView(e),this.byteOffset=0,this.littleEndian=!t}readUInt8(){const e=this.dataView.getUint8(this.byteOffset);return this.byteOffset+=1,e}readUInt16(){const e=this.dataView.getUint16(this.byteOffset,this.littleEndian);return this.byteOffset+=2,e}readUInt32(){const e=this.dataView.getUint32(this.byteOffset,this.littleEndian);return this.byteOffset+=4,e}readInt8(){const e=this.dataView.getInt8(this.byteOffset);return this.byteOffset+=1,e}readInt16(){const e=this.dataView.getInt16(this.byteOffset,this.littleEndian);return this.byteOffset+=2,e}readInt32(){const e=this.dataView.getInt32(this.byteOffset,this.littleEndian);return this.byteOffset+=4,e}readFloat(){const e=this.dataView.getFloat32(this.byteOffset,this.littleEndian);return this.byteOffset+=4,e}readDouble(){const e=this.dataView.getFloat64(this.byteOffset,this.littleEndian);return this.byteOffset+=8,e}readVarInt(){let e,t=0,n=0;do{e=this.dataView.getUint8(this.byteOffset+n),t+=(127&e)<<7*n,n++}while(e>=128);return this.byteOffset+=n,t}};function isTWKB(e){const t=15&new BinaryReader(e).readUInt8();return!(t<1||t>7)}function parseTWKBGeometry(e){const t=new BinaryReader(e),n=parseTWKBHeader(t);if(n.hasSizeAttribute&&t.readVarInt(),n.hasBoundingBox){let e=2;n.hasZ&&e++,n.hasM&&e++;for(let n=0;n<e;n++)t.readVarInt(),t.readVarInt()}return parseGeometry2(t,n,n.geometryType)}function parseTWKBHeader(e){const t=e.readUInt8(),n=e.readUInt8(),r=15&t,o=zigZagDecode(t>>4),i=Boolean(n>>3&1);let s=!1,a=!1,c=0,u=1,l=0,f=1;if(i){const t=e.readUInt8();s=1===(1&t),a=2===(2&t),c=zigZagDecode((28&t)>>2),u=Math.pow(10,c),l=zigZagDecode((224&t)>>5),f=Math.pow(10,l)}return{geometryType:r,precision:o,precisionFactor:Math.pow(10,o),hasBoundingBox:Boolean(1&n),hasSizeAttribute:Boolean(n>>1&1),hasIdList:Boolean(n>>2&1),hasExtendedPrecision:i,isEmpty:Boolean(n>>4&1),hasZ:s,hasM:a,zPrecision:c,zPrecisionFactor:u,mPrecision:l,mPrecisionFactor:f}}function parseGeometry2(e,t,n){switch(n){case 1:return parsePoint3(e,t);case 2:return parseLineString3(e,t);case 3:return parsePolygon3(e,t);case 4:return parseMultiPoint3(e,t);case 5:return parseMultiLineString3(e,t);case 6:return parseMultiPolygon3(e,t);case 7:return parseGeometryCollection2(e,t);default:throw new Error(`GeometryType ${n} not supported`)}}function parsePoint3(e,t){return t.isEmpty?{type:"Point",coordinates:[]}:{type:"Point",coordinates:readFirstPoint(e,t)}}function parseLineString3(e,t){if(t.isEmpty)return{type:"LineString",coordinates:[]};const n=e.readVarInt(),r=makePreviousPoint(t),o=[];for(let i=0;i<n;i++)o.push(parseNextPoint(e,t,r));return{type:"LineString",coordinates:o}}function parsePolygon3(e,t){if(t.isEmpty)return{type:"Polygon",coordinates:[]};const n=e.readVarInt(),r=makePreviousPoint(t),o=e.readVarInt(),i=[];for(let a=0;a<o;a++)i.push(parseNextPoint(e,t,r));const s=[i];for(let a=1;a<n;a++){const n=e.readVarInt(),o=[];for(let i=0;i<n;i++)o.push(parseNextPoint(e,t,r));s.push(o)}return{type:"Polygon",coordinates:s}}function parseMultiPoint3(e,t){if(t.isEmpty)return{type:"MultiPoint",coordinates:[]};const n=makePreviousPoint(t),r=e.readVarInt(),o=[];for(let i=0;i<r;i++)o.push(parseNextPoint(e,t,n));return{type:"MultiPoint",coordinates:o}}function parseMultiLineString3(e,t){if(t.isEmpty)return{type:"MultiLineString",coordinates:[]};const n=makePreviousPoint(t),r=e.readVarInt(),o=[];for(let i=0;i<r;i++){const r=e.readVarInt(),i=[];for(let o=0;o<r;o++)i.push(parseNextPoint(e,t,n));o.push(i)}return{type:"MultiLineString",coordinates:o}}function parseMultiPolygon3(e,t){if(t.isEmpty)return{type:"MultiPolygon",coordinates:[]};const n=makePreviousPoint(t),r=e.readVarInt(),o=[];for(let i=0;i<r;i++){const r=e.readVarInt(),i=e.readVarInt(),s=[];for(let o=0;o<i;o++)s.push(parseNextPoint(e,t,n));const a=s?[s]:[];for(let o=1;o<r;o++){const r=[],o=e.readVarInt();for(let i=0;i<o;i++)r.push(parseNextPoint(e,t,n));a.push(r)}o.push(a)}return{type:"MultiPolygon",coordinates:o}}function parseGeometryCollection2(e,t){return{type:"GeometryCollection",geometries:[]}}function zigZagDecode(e){return e>>1^-(1&e)}function makePointCoordinates(e,t,n,r){return void 0!==n?void 0!==r?[e,t,n,r]:[e,t,n]:[e,t]}function makePreviousPoint(e){return makePointCoordinates(0,0,e.hasZ?0:void 0,e.hasM?0:void 0)}function readFirstPoint(e,t){return makePointCoordinates(zigZagDecode(e.readVarInt())/t.precisionFactor,zigZagDecode(e.readVarInt())/t.precisionFactor,t.hasZ?zigZagDecode(e.readVarInt())/t.zPrecisionFactor:void 0,t.hasM?zigZagDecode(e.readVarInt())/t.mPrecisionFactor:void 0)}function parseNextPoint(e,t,n){return n[0]+=zigZagDecode(e.readVarInt())/t.precisionFactor,n[1]+=zigZagDecode(e.readVarInt())/t.precisionFactor,t.hasZ&&(n[2]+=zigZagDecode(e.readVarInt())/t.zPrecisionFactor),t.hasM&&(n[3]+=zigZagDecode(e.readVarInt())/t.mPrecisionFactor),n.slice()}var TWKBWorkerLoader={name:"TWKB (Tiny Well-Known Binary)",id:"twkb",module:"wkt",version:VERSION,worker:!0,category:"geometry",extensions:["twkb"],mimeTypes:[],tests:[isTWKB],options:{wkb:{shape:"binary-geometry"}}},TWKBLoader={...TWKBWorkerLoader,parse:async e=>parseTWKBGeometry(e),parseSync:parseTWKBGeometry};function encodeTWKB(e,t){const n=new BinaryWriter(0,!0);return encodeGeometry(n,e,{...getTwkbPrecision(5,0,0),hasZ:null==t?void 0:t.hasZ,hasM:null==t?void 0:t.hasM}),n.arrayBuffer}function encodeGeometry(e,t,n){switch(t.type){case"Point":return encodePoint2(e,n,t);case"LineString":return encodeLineString2(e,n,t);case"Polygon":return encodePolygon2(e,n,t);case"MultiPoint":return encodeMultiPoint2(e,n,t);case"MultiLineString":return encodeMultiLineString2(e,n,t);case"MultiPolygon":return encodeMultiPolygon2(e,n,t);case"GeometryCollection":return encodeGeometryCollection2(e,n,t);default:throw new Error("unsupported geometry type")}}function encodePoint2(e,t,n){const r=0===n.coordinates.length||"undefined"===n[0]||"undefined"===n[1];if(writeTwkbHeader(e,t,1,r),!r){const r=[0,0,0,0];writeTwkbPoint(e,t,n.coordinates,r)}}function encodeLineString2(e,t,n){const r=n.coordinates,o=0===r.length;if(writeTwkbHeader(e,t,2,o),!o){e.writeVarInt(r.length);const n=[0,0,0,0];for(const o of r)writeTwkbPoint(e,t,o,n)}return e.arrayBuffer}function encodePolygon2(e,t,n){const r=n.coordinates,o=0===r.length;if(writeTwkbHeader(e,t,3,o),!o){e.writeVarInt(r.length);const n=[0,0,0,0];for(const o of r){e.writeVarInt(o.length);for(const r of o)writeTwkbPoint(e,t,n,r)}}return e.arrayBuffer}function encodeMultiPoint2(e,t,n){const r=n.coordinates,o=0===r.length;if(writeTwkbHeader(e,t,4,o),!o){e.writeVarInt(r.length);const n=[0,0,0,0];for(let o=0;o<r.length;o++)writeTwkbPoint(e,t,n,r[o])}}function encodeMultiLineString2(e,t,n){const r=n.coordinates,o=0===r.length;if(writeTwkbHeader(e,t,5,o),!o){e.writeVarInt(r.length);const n=[0,0,0,0];for(const o of r){e.writeVarInt(o.length);for(const r of o)writeTwkbPoint(e,t,n,r)}}return e.arrayBuffer}function encodeMultiPolygon2(e,t,n){const{coordinates:r}=n,o=0===r.length;if(writeTwkbHeader(e,t,6,o),!o){const n=r;e.writeVarInt(n.length);const o=[0,0,0,0];for(const r of n){e.writeVarInt(r.length);for(const n of r){e.writeVarInt(n.length);for(const r of n)writeTwkbPoint(e,t,o,r)}}}}function encodeGeometryCollection2(e,t,n){const{geometries:r}=n;if(writeTwkbHeader(e,t,7,0===r.length),r.length>0){e.writeVarInt(r.length);for(const n of r)encodeGeometry(e,n,t)}}function writeTwkbHeader(e,t,n,r){const o=(zigZagEncode(t.xy)<<4)+n;let i=t.hasZ||t.hasM?8:0;if(i+=r?16:0,e.writeUInt8(o),e.writeUInt8(i),t.hasZ||t.hasM){let n=0;t.hasZ&&(n|=1),t.hasM&&(n|=2),e.writeUInt8(n)}}function writeTwkbPoint(e,t,n,r){const o=n[0]*t.xyFactor,i=n[1]*t.xyFactor,s=n[2]*t.zFactor,a=n[3]*t.mFactor;e.writeVarInt(zigZagEncode(o-r[0])),e.writeVarInt(zigZagEncode(i-r[1])),t.hasZ&&e.writeVarInt(zigZagEncode(s-r[2])),t.hasM&&e.writeVarInt(zigZagEncode(a-r[3])),r[0]=o,r[1]=i,r[2]=s,r[3]=a}function zigZagEncode(e){return e<<1^e>>31}function getTwkbPrecision(e,t,n){return{xy:e,z:t,m:n,xyFactor:Math.pow(10,e),zFactor:Math.pow(10,t),mFactor:Math.pow(10,n)}}var TWKBWriter={name:"TWKB (Tiny Well Known Binary)",id:"twkb",module:"wkt",version:VERSION,extensions:["twkb"],encode:async(e,t)=>encodeTWKB(e,null==t?void 0:t.twkb),encodeSync:(e,t)=>encodeTWKB(e,null==t?void 0:t.twkb),options:{twkb:{hasZ:!1,hasM:!1}}};